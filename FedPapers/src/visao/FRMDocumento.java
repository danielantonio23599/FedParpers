package visao;

import controle.ControleContato;
import controle.ControleDocumento;
import controle.GeraRelatorio;
import controle.ManipularImagem;
import controle.Relatorio;
import controle.UsuarioControl;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import modelo.ContatoBEAN;
import modelo.DocumentoBEAN;
import modelo.UsuarioBEAN;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Mateu
 */
public class FRMDocumento extends javax.swing.JFrame {

    /**
     * Creates new form FRMPrincipal
     */
    private int cod;

    private String tipoUser;
    private String senha;
    private ArrayList<DocumentoBEAN> doc;
    private ArrayList<DocumentoBEAN> nlidos;
    private DefaultTableModel dTable;
    private DefaultTableModel dTable2;
    private DefaultTableModel dTable3;
    private DefaultTableModel dTable4;
    private ControleDocumento c = new ControleDocumento();
    private UsuarioControl uc = new UsuarioControl();

    public void setDadosUsuer(int cod, String s, String se, int idx) {
        this.cod = cod;
        ArrayList<UsuarioBEAN> dados = new ArrayList<UsuarioBEAN>();

        dados = uc.localizar(cod);

        lbUser.setText(dados.get(0).getNome());
        ManipularImagem m = new ManipularImagem();
        m.exibiImagemLabel(dados.get(0).getFoto(), lbFotoUser);
        this.tipoUser = s;
        this.senha = se;
        // 
        this.setDataRecebida();
        this.atualizaTabelaEnviados();
        this.atualizaTabelaRecebidos();
        this.atualizaTabelaNotLido();
        this.atualizaTabelaTodos();
        tpEnv.setSelectedIndex(idx);

    }

    public FRMDocumento() {
        initComponents();

        setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.HORAS();
        Timer time = new Timer(1000, ativar);
        time.start();
    }

    private void HORAS() {

        hora = Calendar.getInstance();
        hh = hora.get(Calendar.HOUR_OF_DAY);
        mm = hora.get(Calendar.MINUTE);
        ss = hora.get(Calendar.SECOND);
        lbHoras.setText(formatar(hh) + ":" + formatar(mm) + ":" + formatar(ss));

    }

    private String formatar(int num) {
        formato = new DecimalFormat("00");
        return formato.format(num);
    }
    ActionListener ativar = (new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            HORAS();
        }
    });
    int hh, mm, ss, dd; //*
    Calendar hora; //*Hora
    DecimalFormat formato;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnNovoDoc = new javax.swing.JButton();
        btnDocEnv = new javax.swing.JButton();
        btnDocRec = new javax.swing.JButton();
        btnRasc = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        lbFotoUser = new javax.swing.JLabel();
        lbUser = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbHoras = new javax.swing.JLabel();
        btnDocs = new javax.swing.JButton();
        btnArquivados = new javax.swing.JButton();
        tpEnv = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEnviado = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableRecebido = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tableTodos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableNovo = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenu19 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem54 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FedPapers 1.0");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(20, 105, 20), 2));

        btnNovoDoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNovoDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BARRA DE TAREFAS/add-new-document.png"))); // NOI18N
        btnNovoDoc.setText("Novo Memorandos");
        btnNovoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoDocActionPerformed(evt);
            }
        });

        btnDocEnv.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDocEnv.setText("Memorandos Enviados");
        btnDocEnv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocEnvActionPerformed(evt);
            }
        });

        btnDocRec.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDocRec.setText("Memorandos Recebidos");
        btnDocRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocRecActionPerformed(evt);
            }
        });

        btnRasc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRasc.setText("Novos Memorandos");
        btnRasc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRascActionPerformed(evt);
            }
        });

        lbFotoUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/INTERFACE GRAFICA/user (2).png"))); // NOI18N

        lbUser.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        lbUser.setForeground(new java.awt.Color(0, 102, 0));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/visao.icons/logoFed4.png"))); // NOI18N

        lbHoras.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        lbHoras.setForeground(new java.awt.Color(0, 153, 0));
        lbHoras.setText(".");

        btnDocs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDocs.setText("Todos os Memorandos");
        btnDocs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocsActionPerformed(evt);
            }
        });

        btnArquivados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnArquivados.setText("Arquivados");

        tpEnv.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tpEnv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tpEnvMouseClicked(evt);
            }
        });

        tableEnviado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Destinatario", "Assunto", "Data/Hora Enviado", "Data/Hora Recebido", "Data/Hora Lido", "Status", "Codigo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableEnviado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEnviadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEnviado);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                .addContainerGap())
        );

        tpEnv.addTab("Enviados", jPanel4);

        tableRecebido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Remetente", "Assunto", "Data/Hora Enviado", "Data/Hora Recebido", "Status", "Codigo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRecebido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRecebidoMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tableRecebido);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                .addContainerGap())
        );

        tpEnv.addTab("Recebidos", jPanel5);

        tableTodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Assunto", "Remetente", "Destinatario", "Data/Hora Envio", "Data/Hora Recebido", "Data/Hora Lido", "Status", "Codigo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTodosMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tableTodos);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                .addContainerGap())
        );

        tpEnv.addTab("Todos", jPanel8);

        tableNovo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableNovoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableNovo);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                .addContainerGap())
        );

        tpEnv.addTab("Novo", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnNovoDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDocEnv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDocRec, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                .addComponent(btnRasc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator1)
                                .addComponent(jSeparator2)
                                .addComponent(btnDocs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnArquivados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbHoras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbFotoUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(97, 97, 97)))
                .addComponent(tpEnv))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5)
                .addGap(10, 10, 10)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNovoDoc)
                .addGap(18, 18, 18)
                .addComponent(btnDocEnv, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDocRec, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDocs, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRasc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnArquivados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbFotoUser)
                .addGap(13, 13, 13)
                .addComponent(lbUser, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbHoras)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tpEnv, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenu5.setText("Arquivo");

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem10.setText("Perfil");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem10);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BARRA DE TAREFAS/refresh-button.png"))); // NOI18N
        jMenuItem2.setText("Trocar Usuário");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem2);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BARRA DE TAREFAS/shutdown.png"))); // NOI18N
        jMenuItem1.setText("Sair");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem4.setText("Voltar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem4);

        jMenuBar1.add(jMenu5);

        jMenu1.setText("Memorandos");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BOTÕES/add-new-document.png"))); // NOI18N
        jMenuItem3.setText("Criar Novo");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BOTÕES/sent-mail.png"))); // NOI18N
        jMenuItem13.setText("Enviados");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuItem14.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem14.setText("Recebidos");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem14);

        jMenuItem23.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem23.setText("Ver Todos...");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem23);

        jMenuItem24.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem24.setText("Novos");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem24);

        jMenuItem25.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem25.setText("Arquivados");
        jMenu1.add(jMenuItem25);

        jMenuItem26.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BARRA DE TAREFAS/magnifier.png"))); // NOI18N
        jMenuItem26.setText("Localizar");
        jMenuItem26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem26ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem26);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Contatos");

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BARRA DE TAREFAS/plus-black-symbol.png"))); // NOI18N
        jMenuItem11.setText("Adicionar");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);

        jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BOTÕES/edit.png"))); // NOI18N
        jMenuItem12.setText("Editar");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuItem18.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BARRA DE TAREFAS/trash-can-with-cover-from-side-view.png"))); // NOI18N
        jMenuItem18.setText("Remover");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem18);

        jMenuItem21.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visao/ICONES-FEDPAPERS/BARRA DE TAREFAS/magnifier.png"))); // NOI18N
        jMenuItem21.setText("Localizar");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem21);

        jMenuItem22.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem22.setText("Ver Todos...");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem22);

        jMenuBar1.add(jMenu2);

        jMenu19.setText("Relatórios");

        jMenuItem5.setText("Gerar Relatório Contatos");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu19.add(jMenuItem5);

        jMenuItem54.setText("Gerar Relatório Memorandos");
        jMenuItem54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem54ActionPerformed(evt);
            }
        });
        jMenu19.add(jMenuItem54);

        jMenuBar1.add(jMenu19);

        jMenu4.setText("Ajuda");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDocEnvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocEnvActionPerformed
        tpEnv.setSelectedIndex(0);
    }//GEN-LAST:event_btnDocEnvActionPerformed

    private void btnNovoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoDocActionPerformed
        FRMCriarDocumento c = new FRMCriarDocumento();
        c.setVisible(true);
        c.setDadosUsuer(cod, tipoUser, senha);
        this.setVisible(false);
    }//GEN-LAST:event_btnNovoDocActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        tpEnv.setSelectedIndex(1);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        tpEnv.setSelectedIndex(2);
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        FRMPerfil p = new FRMPerfil();
        p.setDadosUsuer(cod, tipoUser, senha);
        p.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        FRMLogin l = new FRMLogin();
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        int opc = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?");
        if (opc == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        FRMPrincipalUsuario p = new FRMPrincipalUsuario();
        p.setDadosUsuer(cod + "", tipoUser, senha);
        p.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        FRMContato c = new FRMContato();
        c.setVisible(true);
        c.setDadosUsuer(cod, tipoUser, senha);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        FRMContato c = new FRMContato();
        c.setVisible(true);
        c.setDadosUsuer(cod, tipoUser, senha);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        FRMContato c = new FRMContato();
        c.setVisible(true);
        c.setDadosUsuer(cod, tipoUser, senha);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        FRMContato c = new FRMContato();
        c.setVisible(true);
        c.setDadosUsuer(cod, tipoUser, senha);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        FRMContato c = new FRMContato();
        c.setVisible(true);
        c.setDadosUsuer(cod, tipoUser, senha);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void tpEnvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tpEnvMouseClicked

    }//GEN-LAST:event_tpEnvMouseClicked

    private void tableTodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTodosMouseClicked
        ArrayList<UsuarioBEAN> d = uc.localizar(cod);
        int linha = tableTodos.getSelectedRow();
        String sql = "";
        if (!d.get(0).getEnderecoEletronico().equals(tableTodos.getValueAt(linha, 1) + "")) {
            sql = "select docCodigo,docData,docAssunto,docRemetente,docCorpoTexto, usuEnderecoEletronico as Destinatario from documento  join destinatariointerno join usuario \n"
                    + "where docCodigo = dei_docCodigo and dei_usuCodigo = usuCodigo  and usuCodigo =" + cod + " and docCodigo = " + Integer.parseInt((tableTodos.getValueAt(linha, 7) + "")) + ";";
        } else {
            sql = "select docCodigo,docData,docAssunto,docRemetente,docCorpoTexto,Destinatario "
                    + " from documento join destinatariointerno join ("
                    + " 	select usuCodigo as desCodigo, usuEnderecoEletronico as Destinatario from usuario "
                    + " ) as dest "
                    + "  join usuario "
                    + "  where doc_usuCodigo = usuCodigo  and desCodigo = dei_usuCodigo and "
                    + "  dei_docCodigo = docCodigo and usuCodigo = " + cod + " and docCodigo =" + Integer.parseInt((tableTodos.getValueAt(linha, 7) + "")) + ";";
        }
        System.out.println(sql);
        try {
            Relatorio.geraRelatorioPedDetalhado(sql);
        } catch (Exception ex) {
            Logger.getLogger(FRMDocumento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableTodosMouseClicked

    private void tableRecebidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRecebidoMouseClicked
        String sql = "select docCodigo,docData,docAssunto,docRemetente,docCorpoTexto, usuEnderecoEletronico as Destinatario from documento  join destinatariointerno join usuario \n"
                + "where docCodigo = dei_docCodigo and dei_usuCodigo = usuCodigo  and usuCodigo =" + cod + " and docCodigo = " + Integer.parseInt((tableRecebido.getValueAt(tableRecebido.getSelectedRow(), 5) + "")) + ";";
        System.out.println(sql);
        try {
            Relatorio.geraRelatorioPedDetalhado(sql);
        } catch (Exception ex) {
            Logger.getLogger(FRMDocumento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableRecebidoMouseClicked

    private void tableEnviadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEnviadoMouseClicked
        String sql = "select docCodigo,docData,docAssunto,docRemetente,docCorpoTexto,Destinatario "
                + " from documento join destinatariointerno join ("
                + " 	select usuCodigo as desCodigo, usuEnderecoEletronico as Destinatario from usuario "
                + " ) as dest "
                + "  join usuario "
                + "  where doc_usuCodigo = usuCodigo  and desCodigo = dei_usuCodigo and "
                + "  dei_docCodigo = docCodigo and usuCodigo = " + cod + " and docCodigo =" + Integer.parseInt((tableEnviado.getValueAt(tableEnviado.getSelectedRow(), 6) + "")) + ";";
        System.out.println(sql);
        try {
            Relatorio.geraRelatorioPedDetalhado(sql);
        } catch (Exception ex) {
            Logger.getLogger(FRMDocumento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableEnviadoMouseClicked

    private void tableNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableNovoMouseClicked
        int docCod = Integer.parseInt((tableNovo.getValueAt(tableNovo.getSelectedRow(), 5) + ""));
        String sql = "select docCodigo,docData,docAssunto,docRemetente,docCorpoTexto, usuEnderecoEletronico as Destinatario from documento  join destinatariointerno join usuario \n"
                + "where docCodigo = dei_docCodigo and dei_usuCodigo = usuCodigo  and usuCodigo =" + cod + " and docCodigo = " + docCod + ";";
        try {
            Relatorio.geraRelatorioPedDetalhado(sql);
        } catch (Exception ex) {
            Logger.getLogger(FRMDocumento.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(docCod);
        this.setDataLido(docCod);
        this.atualizaTablas();
        c.mudaStatus(docCod);
        this.atualizaTablas();
    }//GEN-LAST:event_tableNovoMouseClicked

    private void btnDocRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocRecActionPerformed
        tpEnv.setSelectedIndex(1);
    }//GEN-LAST:event_btnDocRecActionPerformed

    private void btnDocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocsActionPerformed
        tpEnv.setSelectedIndex(2);
    }//GEN-LAST:event_btnDocsActionPerformed

    private void btnRascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRascActionPerformed
        tpEnv.setSelectedIndex(3);
    }//GEN-LAST:event_btnRascActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        tpEnv.setSelectedIndex(0);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        tpEnv.setSelectedIndex(3);
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jMenuItem26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem26ActionPerformed
        tpEnv.setSelectedIndex(2);
    }//GEN-LAST:event_jMenuItem26ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
            //chama o método para dar início a geração do relatório passando o código do cliente como parâmetro
            GeraRelatorio.geraRelatorio(cod,"Contato");
        } catch (Exception x) {
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem54ActionPerformed
        try {
            //chama o método para dar início a geração do relatório passando o código do cliente como parâmetro
            GeraRelatorio.geraRelatorio(cod,"Usuario");
        } catch (Exception x) {
        }
    }//GEN-LAST:event_jMenuItem54ActionPerformed
    private void atualizaTablas() {
        this.atualizaTabelaRecebidos();
        this.atualizaTabelaEnviados();
        this.atualizaTabelaNotLido();
        this.atualizaTabelaTodos();
    }

    private int retornaLinha() {
        int linha = tableNovo.getSelectedRowCount();
        System.out.println(linha);
        return linha;
    }

    private int pegaCodigoDocumento() {
        int linha = this.retornaLinha();
        doc = c.docNotLidos(cod);
        return doc.get(linha).getCodigo();
    }

    /* this.setDataLido();
        System.out.println(Integer.parseInt("codigo ---"+(tableNLidos.getValueAt(tableNLidos.getSelectedRow(), 5) + "")));
        c.mudaStatus(Integer.parseInt((tableNLidos.getValueAt(tableNLidos.getSelectedRow(), 5) + "")));
        this.atualizaTablas();
        String sql = "select docCodigo,docData,docAssunto,docRemetente,docCorpoTexto, usuEnderecoEletronico as Destinatario from documento  join destinatariointerno join usuario \n"
        + "where docCodigo = dei_docCodigo and dei_usuCodigo = usuCodigo  and usuCodigo =" + cod + " and docCodigo = " + Integer.parseInt((tableNLidos.getValueAt(tableNLidos.getSelectedRow(), 5) + "")) + ";";
        try {
            Relatorio.geraRelatorioPedDetalhado(sql);
        } catch (Exception ex) {
            Logger.getLogger(FRMDocumento.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    private DefaultTableModel criaTabelaRecebido() {
        //sempre que usar JTable é necessário ter um DefaulttableModel
        DefaultTableModel dTable = new DefaultTableModel() {
            //Define o tipo dos campos (coluna) na mesma ordem que as colunas foram criadas
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            //define se os campos podem ser editados na propria tabela
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
        //retorna o DefaultTableModel
    return dTable;
    }

    private void preencheTabelaRecebido(ArrayList<DocumentoBEAN> dados) {
        dTable = criaTabelaRecebido();
        //seta o nome das colunas da tabela
        dTable.addColumn("Remetente");
        dTable.addColumn("Assunto");
        dTable.addColumn("Data/Hora Envio");
        dTable.addColumn("Data/Hora Recebido");
        dTable.addColumn("Status");
        dTable.addColumn("Codigo");

        //pega os dados do ArrayList
        //cada célula do arrayList vira uma linha(row) na tabela
        for (DocumentoBEAN dado : dados) {
            dTable.addRow(new Object[]{dado.getRemetente(), dado.getAssunto(), dado.getDataHora(), dado.getDataRecedido(),
                dado.getStatus().getNome(), dado.getCodigo()});

        }
        //set o modelo da tabela
        tableRecebido.setModel(dTable);

    }

    private DefaultTableModel criaTabelaNotLido() {
        //sempre que usar JTable é necessário ter um DefaulttableModel
        DefaultTableModel dTable2 = new DefaultTableModel() {
            //Define o tipo dos campos (coluna) na mesma ordem que as colunas foram criadas
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            //define se os campos podem ser editados na propria tabela
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
        //retorna o DefaultTableModel
    return dTable2;
    }

    private void preencheTabelaNotLido(ArrayList<DocumentoBEAN> dados) {
        dTable3 = criaTabelaNotLido();
        //seta o nome das colunas da tabela
        dTable3.addColumn("Remetente");
        dTable3.addColumn("Assunto");
        dTable3.addColumn("Data/Hora Envio");
        dTable3.addColumn("Data/Hora Recebimento");
        dTable3.addColumn("Status");
        dTable3.addColumn("Codigo");

        //pega os dados do ArrayList
        //cada célula do arrayList vira uma linha(row) na tabela
        for (DocumentoBEAN dado : dados) {
            dTable3.addRow(new Object[]{dado.getRemetente(), dado.getAssunto(), dado.getDataHora(), dado.getDataRecedido(),
                dado.getStatus().getNome(), dado.getCodigo()});
        }
        //set o modelo da tabela
        tableNovo.setModel(dTable3);

    }

    private DefaultTableModel criaTabelaTodos() {
        //sempre que usar JTable é necessário ter um DefaulttableModel
        DefaultTableModel dTable = new DefaultTableModel() {
            //Define o tipo dos campos (coluna) na mesma ordem que as colunas foram criadas
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            //define se os campos podem ser editados na propria tabela
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
        //retorna o DefaultTableModel
    return dTable;
    }

    private void preencheTabelaTodos(ArrayList<DocumentoBEAN> dados) {
        dTable4 = criaTabelaNotLido();
        //seta o nome das colunas da tabela        
        dTable4.addColumn("Assunto");
        dTable4.addColumn("Remetente");
        dTable4.addColumn("Destinatario");
        dTable4.addColumn("Data/Hora Envio");
        dTable4.addColumn("Data/Hora Recebimento");
        dTable4.addColumn("Data/Hora Lido");
        dTable4.addColumn("Status");
        dTable4.addColumn("Codigo");

        //pega os dados do ArrayList
        //cada célula do arrayList vira uma linha(row) na tabela
        for (DocumentoBEAN dado : dados) {
            
                dTable4.addRow(new Object[]{dado.getAssunto(), dado.getRemetente(),
                    dado.getUsuario().getEnderecoEletronico(), dado.getDataHora(), dado.getDataRecedido(),
                    dado.getDataLido(), dado.getStatus().getNome(), dado.getCodigo()});
            
        }
        //set o modelo da tabela
        tableTodos.setModel(dTable4);

    }

    private DefaultTableModel criaTabelaEnviado() {
        //sempre que usar JTable é necessário ter um DefaulttableModel
        DefaultTableModel dTable = new DefaultTableModel() {
            //Define o tipo dos campos (coluna) na mesma ordem que as colunas foram criadas
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            //define se os campos podem ser editados na propria tabela
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
        //retorna o DefaultTableModel
    return dTable;
    }

    private void preencheTabelaEnviado(ArrayList<DocumentoBEAN> dados) {
        dTable2 = criaTabelaEnviado();
        //seta o nome das colunas da tabela
        dTable2.addColumn("Destinatario");
        dTable2.addColumn("Assunto");
        dTable2.addColumn("Data/Hora Envio");
        dTable2.addColumn("Data/Hora Recebimento");
        dTable2.addColumn("Data/Hora Lido");
        dTable2.addColumn("Status");
        dTable2.addColumn("Codigo");

        //pega os dados do ArrayList
        //cada célula do arrayList vira uma linha(row) na tabela
        for (DocumentoBEAN dado : dados) {
            dTable2.addRow(new Object[]{dado.getUsuario().getEnderecoEletronico(),
                dado.getAssunto(), dado.getDataHora(), dado.getDataRecedido(), dado.getDataLido(),
                dado.getStatus().getNome(), dado.getCodigo()});
        }
        //set o modelo da tabela
        tableEnviado.setModel(dTable2);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRMDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRMDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRMDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRMDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRMDocumento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArquivados;
    private javax.swing.JButton btnDocEnv;
    private javax.swing.JButton btnDocRec;
    private javax.swing.JButton btnDocs;
    private javax.swing.JButton btnNovoDoc;
    private javax.swing.JButton btnRasc;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu19;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem54;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbFotoUser;
    private javax.swing.JLabel lbHoras;
    private javax.swing.JLabel lbUser;
    private javax.swing.JTable tableEnviado;
    private javax.swing.JTable tableNovo;
    private javax.swing.JTable tableRecebido;
    private javax.swing.JTable tableTodos;
    private javax.swing.JTabbedPane tpEnv;
    // End of variables declaration//GEN-END:variables

    private void atualizaTabelaRecebidos() {
        doc = c.docRecebidos(cod);
        this.preencheTabelaRecebido(doc);
    }

    private void atualizaTabelaEnviados() {
        doc = c.docEnviados(cod);
        this.preencheTabelaEnviado(doc);
    }

    private void atualizaTabelaNotLido() {
        doc = c.docNotLidos(cod);
        this.preencheTabelaNotLido(doc);
    }

    private void atualizaTabelaTodos() {
        doc = c.docTodos(cod);
        this.preencheTabelaTodos(doc);
    }

    private void setDataRecebida() {
        doc = c.docNotLidos(cod);
        for (DocumentoBEAN d : doc) {
            System.out.println(d.getDataRecedido());
            if ((d.getDataRecedido() == null) || d.getDataRecedido().toString().equals("")) {
                c.setDataRecebido(getDateTime(), d.getCodigo());
                System.out.println("atualizou");
            }
        }
        this.atualizaTabelaRecebidos();
        this.atualizaTabelaEnviados();
        this.atualizaTabelaNotLido();
        this.atualizaTabelaTodos();

    }

    private void setDataLido(int docCod) {
        c.setDataLido(getDateTime(), docCod);
        this.atualizaTabelaRecebidos();
        this.atualizaTabelaEnviados();
        this.atualizaTabelaNotLido();
        this.atualizaTabelaTodos();
    }

    private String getDateTime() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date d = new Date();
        return dateFormat.format(d);
    }
}
